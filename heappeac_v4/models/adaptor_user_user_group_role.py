# coding: utf-8

"""
    HEAppE Web API

    HEAppE middleware API v4.2.1  # noqa: E501

    OpenAPI spec version: v4.2.1
    Contact: support.heappe@it4i.cz
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class AdaptorUserUserGroupRole(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'adaptor_user_id': 'int',
        'adaptor_user': 'AdaptorUser',
        'adaptor_user_group_id': 'int',
        'adaptor_user_group': 'AdaptorUserGroup',
        'adaptor_user_role_id': 'int',
        'adaptor_user_role': 'AdaptorUserRole',
        'created_at': 'datetime',
        'modified_at': 'datetime',
        'is_deleted': 'bool'
    }

    attribute_map = {
        'adaptor_user_id': 'AdaptorUserId',
        'adaptor_user': 'AdaptorUser',
        'adaptor_user_group_id': 'AdaptorUserGroupId',
        'adaptor_user_group': 'AdaptorUserGroup',
        'adaptor_user_role_id': 'AdaptorUserRoleId',
        'adaptor_user_role': 'AdaptorUserRole',
        'created_at': 'CreatedAt',
        'modified_at': 'ModifiedAt',
        'is_deleted': 'IsDeleted'
    }

    def __init__(self, adaptor_user_id=None, adaptor_user=None, adaptor_user_group_id=None, adaptor_user_group=None, adaptor_user_role_id=None, adaptor_user_role=None, created_at=None, modified_at=None, is_deleted=None):  # noqa: E501
        """AdaptorUserUserGroupRole - a model defined in Swagger"""  # noqa: E501
        self._adaptor_user_id = None
        self._adaptor_user = None
        self._adaptor_user_group_id = None
        self._adaptor_user_group = None
        self._adaptor_user_role_id = None
        self._adaptor_user_role = None
        self._created_at = None
        self._modified_at = None
        self._is_deleted = None
        self.discriminator = None
        if adaptor_user_id is not None:
            self.adaptor_user_id = adaptor_user_id
        if adaptor_user is not None:
            self.adaptor_user = adaptor_user
        if adaptor_user_group_id is not None:
            self.adaptor_user_group_id = adaptor_user_group_id
        if adaptor_user_group is not None:
            self.adaptor_user_group = adaptor_user_group
        if adaptor_user_role_id is not None:
            self.adaptor_user_role_id = adaptor_user_role_id
        if adaptor_user_role is not None:
            self.adaptor_user_role = adaptor_user_role
        self.created_at = created_at
        if modified_at is not None:
            self.modified_at = modified_at
        self.is_deleted = is_deleted

    @property
    def adaptor_user_id(self):
        """Gets the adaptor_user_id of this AdaptorUserUserGroupRole.  # noqa: E501


        :return: The adaptor_user_id of this AdaptorUserUserGroupRole.  # noqa: E501
        :rtype: int
        """
        return self._adaptor_user_id

    @adaptor_user_id.setter
    def adaptor_user_id(self, adaptor_user_id):
        """Sets the adaptor_user_id of this AdaptorUserUserGroupRole.


        :param adaptor_user_id: The adaptor_user_id of this AdaptorUserUserGroupRole.  # noqa: E501
        :type: int
        """

        self._adaptor_user_id = adaptor_user_id

    @property
    def adaptor_user(self):
        """Gets the adaptor_user of this AdaptorUserUserGroupRole.  # noqa: E501


        :return: The adaptor_user of this AdaptorUserUserGroupRole.  # noqa: E501
        :rtype: AdaptorUser
        """
        return self._adaptor_user

    @adaptor_user.setter
    def adaptor_user(self, adaptor_user):
        """Sets the adaptor_user of this AdaptorUserUserGroupRole.


        :param adaptor_user: The adaptor_user of this AdaptorUserUserGroupRole.  # noqa: E501
        :type: AdaptorUser
        """

        self._adaptor_user = adaptor_user

    @property
    def adaptor_user_group_id(self):
        """Gets the adaptor_user_group_id of this AdaptorUserUserGroupRole.  # noqa: E501


        :return: The adaptor_user_group_id of this AdaptorUserUserGroupRole.  # noqa: E501
        :rtype: int
        """
        return self._adaptor_user_group_id

    @adaptor_user_group_id.setter
    def adaptor_user_group_id(self, adaptor_user_group_id):
        """Sets the adaptor_user_group_id of this AdaptorUserUserGroupRole.


        :param adaptor_user_group_id: The adaptor_user_group_id of this AdaptorUserUserGroupRole.  # noqa: E501
        :type: int
        """

        self._adaptor_user_group_id = adaptor_user_group_id

    @property
    def adaptor_user_group(self):
        """Gets the adaptor_user_group of this AdaptorUserUserGroupRole.  # noqa: E501


        :return: The adaptor_user_group of this AdaptorUserUserGroupRole.  # noqa: E501
        :rtype: AdaptorUserGroup
        """
        return self._adaptor_user_group

    @adaptor_user_group.setter
    def adaptor_user_group(self, adaptor_user_group):
        """Sets the adaptor_user_group of this AdaptorUserUserGroupRole.


        :param adaptor_user_group: The adaptor_user_group of this AdaptorUserUserGroupRole.  # noqa: E501
        :type: AdaptorUserGroup
        """

        self._adaptor_user_group = adaptor_user_group

    @property
    def adaptor_user_role_id(self):
        """Gets the adaptor_user_role_id of this AdaptorUserUserGroupRole.  # noqa: E501


        :return: The adaptor_user_role_id of this AdaptorUserUserGroupRole.  # noqa: E501
        :rtype: int
        """
        return self._adaptor_user_role_id

    @adaptor_user_role_id.setter
    def adaptor_user_role_id(self, adaptor_user_role_id):
        """Sets the adaptor_user_role_id of this AdaptorUserUserGroupRole.


        :param adaptor_user_role_id: The adaptor_user_role_id of this AdaptorUserUserGroupRole.  # noqa: E501
        :type: int
        """

        self._adaptor_user_role_id = adaptor_user_role_id

    @property
    def adaptor_user_role(self):
        """Gets the adaptor_user_role of this AdaptorUserUserGroupRole.  # noqa: E501


        :return: The adaptor_user_role of this AdaptorUserUserGroupRole.  # noqa: E501
        :rtype: AdaptorUserRole
        """
        return self._adaptor_user_role

    @adaptor_user_role.setter
    def adaptor_user_role(self, adaptor_user_role):
        """Sets the adaptor_user_role of this AdaptorUserUserGroupRole.


        :param adaptor_user_role: The adaptor_user_role of this AdaptorUserUserGroupRole.  # noqa: E501
        :type: AdaptorUserRole
        """

        self._adaptor_user_role = adaptor_user_role

    @property
    def created_at(self):
        """Gets the created_at of this AdaptorUserUserGroupRole.  # noqa: E501


        :return: The created_at of this AdaptorUserUserGroupRole.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this AdaptorUserUserGroupRole.


        :param created_at: The created_at of this AdaptorUserUserGroupRole.  # noqa: E501
        :type: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")  # noqa: E501

        self._created_at = created_at

    @property
    def modified_at(self):
        """Gets the modified_at of this AdaptorUserUserGroupRole.  # noqa: E501


        :return: The modified_at of this AdaptorUserUserGroupRole.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this AdaptorUserUserGroupRole.


        :param modified_at: The modified_at of this AdaptorUserUserGroupRole.  # noqa: E501
        :type: datetime
        """

        self._modified_at = modified_at

    @property
    def is_deleted(self):
        """Gets the is_deleted of this AdaptorUserUserGroupRole.  # noqa: E501


        :return: The is_deleted of this AdaptorUserUserGroupRole.  # noqa: E501
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this AdaptorUserUserGroupRole.


        :param is_deleted: The is_deleted of this AdaptorUserUserGroupRole.  # noqa: E501
        :type: bool
        """
        if is_deleted is None:
            raise ValueError("Invalid value for `is_deleted`, must not be `None`")  # noqa: E501

        self._is_deleted = is_deleted

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AdaptorUserUserGroupRole, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AdaptorUserUserGroupRole):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
