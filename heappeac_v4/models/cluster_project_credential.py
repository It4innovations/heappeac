# coding: utf-8

"""
    HEAppE Web API

    HEAppE middleware API v4.2.1  # noqa: E501

    OpenAPI spec version: v4.2.1
    Contact: support.heappe@it4i.cz
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ClusterProjectCredential(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cluster_project_id': 'int',
        'cluster_project': 'ClusterProject',
        'cluster_authentication_credentials_id': 'int',
        'cluster_authentication_credentials': 'ClusterAuthenticationCredentials',
        'is_service_account': 'bool',
        'created_at': 'datetime',
        'modified_at': 'datetime',
        'is_deleted': 'bool'
    }

    attribute_map = {
        'cluster_project_id': 'ClusterProjectId',
        'cluster_project': 'ClusterProject',
        'cluster_authentication_credentials_id': 'ClusterAuthenticationCredentialsId',
        'cluster_authentication_credentials': 'ClusterAuthenticationCredentials',
        'is_service_account': 'IsServiceAccount',
        'created_at': 'CreatedAt',
        'modified_at': 'ModifiedAt',
        'is_deleted': 'IsDeleted'
    }

    def __init__(self, cluster_project_id=None, cluster_project=None, cluster_authentication_credentials_id=None, cluster_authentication_credentials=None, is_service_account=None, created_at=None, modified_at=None, is_deleted=None):  # noqa: E501
        """ClusterProjectCredential - a model defined in Swagger"""  # noqa: E501
        self._cluster_project_id = None
        self._cluster_project = None
        self._cluster_authentication_credentials_id = None
        self._cluster_authentication_credentials = None
        self._is_service_account = None
        self._created_at = None
        self._modified_at = None
        self._is_deleted = None
        self.discriminator = None
        if cluster_project_id is not None:
            self.cluster_project_id = cluster_project_id
        if cluster_project is not None:
            self.cluster_project = cluster_project
        if cluster_authentication_credentials_id is not None:
            self.cluster_authentication_credentials_id = cluster_authentication_credentials_id
        if cluster_authentication_credentials is not None:
            self.cluster_authentication_credentials = cluster_authentication_credentials
        if is_service_account is not None:
            self.is_service_account = is_service_account
        self.created_at = created_at
        if modified_at is not None:
            self.modified_at = modified_at
        self.is_deleted = is_deleted

    @property
    def cluster_project_id(self):
        """Gets the cluster_project_id of this ClusterProjectCredential.  # noqa: E501


        :return: The cluster_project_id of this ClusterProjectCredential.  # noqa: E501
        :rtype: int
        """
        return self._cluster_project_id

    @cluster_project_id.setter
    def cluster_project_id(self, cluster_project_id):
        """Sets the cluster_project_id of this ClusterProjectCredential.


        :param cluster_project_id: The cluster_project_id of this ClusterProjectCredential.  # noqa: E501
        :type: int
        """

        self._cluster_project_id = cluster_project_id

    @property
    def cluster_project(self):
        """Gets the cluster_project of this ClusterProjectCredential.  # noqa: E501


        :return: The cluster_project of this ClusterProjectCredential.  # noqa: E501
        :rtype: ClusterProject
        """
        return self._cluster_project

    @cluster_project.setter
    def cluster_project(self, cluster_project):
        """Sets the cluster_project of this ClusterProjectCredential.


        :param cluster_project: The cluster_project of this ClusterProjectCredential.  # noqa: E501
        :type: ClusterProject
        """

        self._cluster_project = cluster_project

    @property
    def cluster_authentication_credentials_id(self):
        """Gets the cluster_authentication_credentials_id of this ClusterProjectCredential.  # noqa: E501


        :return: The cluster_authentication_credentials_id of this ClusterProjectCredential.  # noqa: E501
        :rtype: int
        """
        return self._cluster_authentication_credentials_id

    @cluster_authentication_credentials_id.setter
    def cluster_authentication_credentials_id(self, cluster_authentication_credentials_id):
        """Sets the cluster_authentication_credentials_id of this ClusterProjectCredential.


        :param cluster_authentication_credentials_id: The cluster_authentication_credentials_id of this ClusterProjectCredential.  # noqa: E501
        :type: int
        """

        self._cluster_authentication_credentials_id = cluster_authentication_credentials_id

    @property
    def cluster_authentication_credentials(self):
        """Gets the cluster_authentication_credentials of this ClusterProjectCredential.  # noqa: E501


        :return: The cluster_authentication_credentials of this ClusterProjectCredential.  # noqa: E501
        :rtype: ClusterAuthenticationCredentials
        """
        return self._cluster_authentication_credentials

    @cluster_authentication_credentials.setter
    def cluster_authentication_credentials(self, cluster_authentication_credentials):
        """Sets the cluster_authentication_credentials of this ClusterProjectCredential.


        :param cluster_authentication_credentials: The cluster_authentication_credentials of this ClusterProjectCredential.  # noqa: E501
        :type: ClusterAuthenticationCredentials
        """

        self._cluster_authentication_credentials = cluster_authentication_credentials

    @property
    def is_service_account(self):
        """Gets the is_service_account of this ClusterProjectCredential.  # noqa: E501


        :return: The is_service_account of this ClusterProjectCredential.  # noqa: E501
        :rtype: bool
        """
        return self._is_service_account

    @is_service_account.setter
    def is_service_account(self, is_service_account):
        """Sets the is_service_account of this ClusterProjectCredential.


        :param is_service_account: The is_service_account of this ClusterProjectCredential.  # noqa: E501
        :type: bool
        """

        self._is_service_account = is_service_account

    @property
    def created_at(self):
        """Gets the created_at of this ClusterProjectCredential.  # noqa: E501


        :return: The created_at of this ClusterProjectCredential.  # noqa: E501
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ClusterProjectCredential.


        :param created_at: The created_at of this ClusterProjectCredential.  # noqa: E501
        :type: datetime
        """
        if created_at is None:
            raise ValueError("Invalid value for `created_at`, must not be `None`")  # noqa: E501

        self._created_at = created_at

    @property
    def modified_at(self):
        """Gets the modified_at of this ClusterProjectCredential.  # noqa: E501


        :return: The modified_at of this ClusterProjectCredential.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_at

    @modified_at.setter
    def modified_at(self, modified_at):
        """Sets the modified_at of this ClusterProjectCredential.


        :param modified_at: The modified_at of this ClusterProjectCredential.  # noqa: E501
        :type: datetime
        """

        self._modified_at = modified_at

    @property
    def is_deleted(self):
        """Gets the is_deleted of this ClusterProjectCredential.  # noqa: E501


        :return: The is_deleted of this ClusterProjectCredential.  # noqa: E501
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this ClusterProjectCredential.


        :param is_deleted: The is_deleted of this ClusterProjectCredential.  # noqa: E501
        :type: bool
        """
        if is_deleted is None:
            raise ValueError("Invalid value for `is_deleted`, must not be `None`")  # noqa: E501

        self._is_deleted = is_deleted

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ClusterProjectCredential, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ClusterProjectCredential):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
